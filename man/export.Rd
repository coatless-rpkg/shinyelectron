% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/export.R
\name{export}
\alias{export}
\title{Export Shiny Application as Electron Desktop Application}
\usage{
export(
  appdir,
  destdir,
  app_name = NULL,
  app_type = "r-shinylive",
  platform = NULL,
  arch = NULL,
  icon = NULL,
  overwrite = FALSE,
  build = TRUE,
  run_after = FALSE,
  open_after = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{appdir}{Character string. Path to the directory containing the Shiny application.}

\item{destdir}{Character string. Path to the destination directory where the Electron app will be created.}

\item{app_name}{Character string. Name of the application. If NULL, uses the base name of appdir.}

\item{app_type}{Character string. Type of application: "r-shinylive" (default), "r-shiny", "py-shinylive", or "py-shiny".}

\item{platform}{Character vector. Target platforms: "win", "mac", "linux". If NULL, builds for current platform.}

\item{arch}{Character vector. Target architectures: "x64", "arm64". If NULL, uses current architecture.}

\item{icon}{Character string. Path to application icon file. Platform-specific format required.}

\item{overwrite}{Logical. Whether to overwrite existing output directory. Default is FALSE.}

\item{build}{Logical. Whether to build distributable packages. Default is TRUE.}

\item{run_after}{Logical. Whether to run the application in development mode after export. Default is FALSE.}

\item{open_after}{Logical. Whether to open the generated project directory after export. Default is FALSE.}

\item{verbose}{Logical. Whether to display detailed progress information. Default is TRUE.}
}
\value{
List containing paths to the converted app and built Electron app (if built).
}
\description{
Main entry point function that wraps the conversion, building, and optionally
running of a Shiny application as an Electron desktop application.
}
\section{Details}{

This is the main function of the package that orchestrates the entire process:
\itemize{
\item Validates the input Shiny application
\item Converts the Shiny app to the specified format (shinylive by default)
\item Sets up the Electron project structure
\item Optionally builds distributable packages
\item Optionally runs the application for testing
}
}

\section{Supported Application Types}{

\itemize{
\item \code{r-shinylive}: R Shiny app converted to run entirely in browser (recommended)
\item \code{r-shiny}: R Shiny app with embedded R runtime
\item \code{py-shinylive}: Python Shiny app converted to run entirely in browser
\item \code{py-shiny}: Python Shiny app with embedded Python runtime
}
}

\examples{
\dontrun{
# Basic export to shinylive Electron app
export(
  appdir = "path/to/shiny/app",
  destdir = "path/to/electron/output"
)

# Export with custom settings
export(
  appdir = "path/to/shiny/app",
  destdir = "path/to/output",
  app_name = "My Amazing App",
  app_type = "r-shinylive",
  platform = c("win", "mac"),
  icon = "path/to/icon.ico",
  overwrite = TRUE,
  run_after = TRUE
)

# Export regular Shiny app (with R runtime)
export(
  appdir = "path/to/shiny/app",
  destdir = "path/to/output",
  app_type = "r-shiny"
)
}

}
